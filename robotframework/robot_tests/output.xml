<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20191220 22:32:37.494" rpa="false">
<suite id="s1" name="Robot Tests" source="/home/robert/tau/TAU---basen/robotframework/robot_tests">
<suite id="s1-s1" name="Figury" source="/home/robert/tau/TAU---basen/robotframework/robot_tests/figury">
<suite id="s1-s1-s1" name="Kwadraty I Trojkaty" source="/home/robert/tau/TAU---basen/robotframework/robot_tests/figury/kwadraty_i_trojkaty.robot">
<test id="s1-s1-s1-t1" name="Nie podano argumentow">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.651" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury</msg>
<msg timestamp="20191220 22:32:37.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.663" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.664" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.650" endtime="20191220 22:32:37.664"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${error_args_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.667" endtime="20191220 22:32:37.670"></status>
</kw>
<doc>Test nieudanego odpalenia
programu - brak podanych boków.</doc>
<status status="PASS" starttime="20191220 22:32:37.647" endtime="20191220 22:32:37.673" critical="yes"></status>
</test>
<test id="s1-s1-s1-t2" name="Za duzo argumentow">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>2</arg>
<arg>4</arg>
<arg>2</arg>
<arg>3</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.678" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 2 4 2 3 3</msg>
<msg timestamp="20191220 22:32:37.682" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.685" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.686" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.677" endtime="20191220 22:32:37.686"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${error_args_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.687" endtime="20191220 22:32:37.688"></status>
</kw>
<doc>Test nieudanego odpalenia
programu - zbyt wiele argumentow.</doc>
<status status="PASS" starttime="20191220 22:32:37.675" endtime="20191220 22:32:37.689" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Trojkat - zle boki">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>2</arg>
<arg>5</arg>
<arg>20</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.694" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 2 5 20</msg>
<msg timestamp="20191220 22:32:37.699" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.701" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.702" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.693" endtime="20191220 22:32:37.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20191220 22:32:37.704" level="INFO">ERROR:nieprawidlowa_figura: Z podanych bokow nie da się złożyć trójkąta</msg>
<status status="PASS" starttime="20191220 22:32:37.703" endtime="20191220 22:32:37.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${error_triangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.705" endtime="20191220 22:32:37.706"></status>
</kw>
<doc>Test trójkąta - niepoprawne
długości boków.</doc>
<status status="PASS" starttime="20191220 22:32:37.690" endtime="20191220 22:32:37.707" critical="yes"></status>
</test>
<test id="s1-s1-s1-t4" name="Trojkat rownoboczny - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>4</arg>
<arg>4</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.713" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 4 4 4</msg>
<msg timestamp="20191220 22:32:37.718" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.721" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.721" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.711" endtime="20191220 22:32:37.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${equilateral triangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.723" endtime="20191220 22:32:37.725"></status>
</kw>
<doc>Test trójkąta równobocznego
programu - zbyt wiele argumentow.</doc>
<status status="PASS" starttime="20191220 22:32:37.709" endtime="20191220 22:32:37.725" critical="yes"></status>
</test>
<test id="s1-s1-s1-t5" name="Trojkat rownoramienny v1 - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>4</arg>
<arg>4</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.730" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 4 4 3</msg>
<msg timestamp="20191220 22:32:37.734" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.737" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.737" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.729" endtime="20191220 22:32:37.738"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${isosceles_triangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.739" endtime="20191220 22:32:37.740"></status>
</kw>
<doc>Test trójkąta równoramiennego.</doc>
<status status="PASS" starttime="20191220 22:32:37.727" endtime="20191220 22:32:37.741" critical="yes"></status>
</test>
<test id="s1-s1-s1-t6" name="Trojkat rownoramienny v2 - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>4</arg>
<arg>3</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.746" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 4 3 4</msg>
<msg timestamp="20191220 22:32:37.753" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.754" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.755" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.745" endtime="20191220 22:32:37.755"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${isosceles_triangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.757" endtime="20191220 22:32:37.759"></status>
</kw>
<doc>Test trójkąta równoramiennego.</doc>
<status status="PASS" starttime="20191220 22:32:37.742" endtime="20191220 22:32:37.760" critical="yes"></status>
</test>
<test id="s1-s1-s1-t7" name="Trojkat rownoramienny v3 - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>3</arg>
<arg>4</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.765" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 3 4 4</msg>
<msg timestamp="20191220 22:32:37.791" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.802" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.802" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.764" endtime="20191220 22:32:37.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${isosceles_triangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.803" endtime="20191220 22:32:37.811"></status>
</kw>
<doc>Test trójkąta równoramiennego.</doc>
<status status="PASS" starttime="20191220 22:32:37.762" endtime="20191220 22:32:37.812" critical="yes"></status>
</test>
<test id="s1-s1-s1-t8" name="Trojkat roznoramienny - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.819" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 3 4 5</msg>
<msg timestamp="20191220 22:32:37.827" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.828" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.829" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.815" endtime="20191220 22:32:37.829"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${multiarmed_triangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.830" endtime="20191220 22:32:37.832"></status>
</kw>
<doc>Test trójkąta różnoramiennego.</doc>
<status status="PASS" starttime="20191220 22:32:37.813" endtime="20191220 22:32:37.832" critical="yes"></status>
</test>
<test id="s1-s1-s1-t9" name="Kwadrat - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>3</arg>
<arg>3</arg>
<arg>3</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.838" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 3 3 3 3</msg>
<msg timestamp="20191220 22:32:37.843" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.847" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.847" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.835" endtime="20191220 22:32:37.848"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${square_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.849" endtime="20191220 22:32:37.851"></status>
</kw>
<doc>Test kwadratu</doc>
<status status="PASS" starttime="20191220 22:32:37.833" endtime="20191220 22:32:37.855" critical="yes"></status>
</test>
<test id="s1-s1-s1-t10" name="Prostokat v1 - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>3</arg>
<arg>2</arg>
<arg>2</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.860" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 3 2 2 3</msg>
<msg timestamp="20191220 22:32:37.871" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.872" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.873" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.859" endtime="20191220 22:32:37.873"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${rectangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.874" endtime="20191220 22:32:37.876"></status>
</kw>
<doc>Test prostokąta</doc>
<status status="PASS" starttime="20191220 22:32:37.857" endtime="20191220 22:32:37.877" critical="yes"></status>
</test>
<test id="s1-s1-s1-t11" name="Prostokat v2 - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>3</arg>
<arg>3</arg>
<arg>2</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.884" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 3 3 2 2</msg>
<msg timestamp="20191220 22:32:37.889" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.893" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.894" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.882" endtime="20191220 22:32:37.894"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${rectangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.896" endtime="20191220 22:32:37.898"></status>
</kw>
<doc>Test prostokąta</doc>
<status status="PASS" starttime="20191220 22:32:37.879" endtime="20191220 22:32:37.899" critical="yes"></status>
</test>
<test id="s1-s1-s1-t12" name="Czworobok - Happy Path">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>3</arg>
<arg>4</arg>
<arg>2</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.905" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 3 4 2 5</msg>
<msg timestamp="20191220 22:32:37.911" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.913" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.914" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.904" endtime="20191220 22:32:37.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${quadrangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.915" endtime="20191220 22:32:37.918"></status>
</kw>
<doc>Test czworokata</doc>
<status status="PASS" starttime="20191220 22:32:37.900" endtime="20191220 22:32:37.920" critical="yes"></status>
</test>
<test id="s1-s1-s1-t13" name="Czworobok - zle boki">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${directory}/figury</arg>
<arg>1</arg>
<arg>15</arg>
<arg>3</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191220 22:32:37.925" level="INFO">Starting process:
/home/robert/tau/TAU---basen/robotframework/figury/figury 1 15 3 2</msg>
<msg timestamp="20191220 22:32:37.930" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191220 22:32:37.933" level="INFO">Process completed.</msg>
<msg timestamp="20191220 22:32:37.934" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20191220 22:32:37.924" endtime="20191220 22:32:37.934"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>${error_quadrangle_text}</arg>
</arguments>
<status status="PASS" starttime="20191220 22:32:37.935" endtime="20191220 22:32:37.937"></status>
</kw>
<doc>Test czworokata - niepoprawne
długości boków.</doc>
<status status="PASS" starttime="20191220 22:32:37.922" endtime="20191220 22:32:37.938" critical="yes"></status>
</test>
<status status="PASS" starttime="20191220 22:32:37.598" endtime="20191220 22:32:37.940"></status>
</suite>
<status status="PASS" starttime="20191220 22:32:37.594" endtime="20191220 22:32:37.946"></status>
</suite>
<status status="PASS" starttime="20191220 22:32:37.544" endtime="20191220 22:32:37.958"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="Robot Tests">Robot Tests</stat>
<stat pass="13" fail="0" id="s1-s1" name="Figury">Robot Tests.Figury</stat>
<stat pass="13" fail="0" id="s1-s1-s1" name="Kwadraty I Trojkaty">Robot Tests.Figury.Kwadraty I Trojkaty</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
